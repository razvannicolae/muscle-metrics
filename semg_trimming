import os

def process_file(file_path):
    with open(file_path, 'r') as f:
        lines = f.readlines()

    # List to store the truncated data
    truncated_lines = [lines[0]]  # Start with the first line (non-relevant data)

    # Process data in chunks of 7 starting from the second line
    i = 1  # Start from the second line
    while i < len(lines):
        # Get the current chunk of 7 lines
        chunk = lines[i:i+7]
        
        # If there's less than 7 lines remaining, stop processing
        if len(chunk) < 7:
            break
        
        # Check if the 7th element (frame number) is '400'
        frame_number = chunk[6].strip()
        if frame_number == '400':
            truncated_lines.extend(chunk)  # Include the whole chunk up to and including frame 400
            break  # Stop processing after frame 400
        else:
            truncated_lines.extend(chunk)  # Add the chunk if it's not the frame we are looking for
        
        # Move to the next chunk
        i += 7
    
    # Write the truncated lines back to the file without a trailing newline
    with open(file_path, 'w') as f:
        # Join all lines in the list and remove the last newline
        f.write(''.join(truncated_lines).strip())

def process_files_in_directory(directory_path):
    # Loop through all files in the specified directory
    for filename in os.listdir(directory_path):
        filename = filename.strip()  # Strip any newlines or extra spaces from the filename
        if filename.startswith('session') and filename.endswith('.txt'):
            file_path = os.path.join(directory_path, filename)
            print(f"Processing {file_path}...")
            process_file(file_path)

# Replace this with the path to the directory containing your txt files
directory_path = 'semg'

process_files_in_directory(directory_path)
